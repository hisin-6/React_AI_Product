{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rotat\\\\React_AI_Product\\\\react-todo-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { getTodos, createTodo, updateTodo, deleteTodo } from './api/todos';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setLoading(true);\n      try {\n        const todos = await getTodos();\n        setTodos(todos);\n      } catch (error) {\n        setError('Error fetching todos');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTodos();\n  }, []);\n  const addTodo = async todoText => {\n    try {\n      const newTodo = await createTodo({\n        text: todoText\n      });\n      setTodos([...todos, newTodo]);\n    } catch (error) {\n      setError('Error adding todo');\n    }\n  };\n  const updateTodoHandler = async (id, updatedFields) => {\n    try {\n      const updatedTodo = await updateTodo(id, updatedFields);\n      setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n    } catch (error) {\n      setError('Error updating todo');\n    }\n  };\n  const deleteTodoHandler = async id => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      setError('Error deleting todo');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      updateTodo: updateTodoHandler,\n      deleteTodo: deleteTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8cPL8yhAVVqFRj33HpgY53c1pGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","TodoForm","LoadingSpinner","getTodos","createTodo","updateTodo","deleteTodo","jsxDEV","_jsxDEV","App","_s","todos","setTodos","loading","setLoading","error","setError","fetchTodos","addTodo","todoText","newTodo","text","updateTodoHandler","id","updatedFields","updatedTodo","map","todo","deleteTodoHandler","filter","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/rotat/React_AI_Product/react-todo-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { getTodos, createTodo, updateTodo, deleteTodo } from './api/todos';\nimport './styles/App.css';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setLoading(true);\n      try {\n        const todos = await getTodos();\n        setTodos(todos);\n      } catch (error) {\n        setError('Error fetching todos');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const addTodo = async (todoText) => {\n    try {\n      const newTodo = await createTodo({ text: todoText });\n      setTodos([...todos, newTodo]);\n    } catch (error) {\n      setError('Error adding todo');\n    }\n  };\n\n  const updateTodoHandler = async (id, updatedFields) => {\n    try {\n      const updatedTodo = await updateTodo(id, updatedFields);\n      setTodos(todos.map(todo => (todo.id === id ? updatedTodo : todo)));\n    } catch (error) {\n      setError('Error updating todo');\n    }\n  };\n\n  const deleteTodoHandler = async (id) => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (error) {\n      setError('Error deleting todo');\n    }\n  };\n\n  if (loading) return <LoadingSpinner />;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"app\">\n      <h1>Todo App</h1>\n      <TodoForm addTodo={addTodo} />\n      <TodoList todos={todos} updateTodo={updateTodoHandler} deleteTodo={deleteTodoHandler} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}