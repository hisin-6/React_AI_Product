{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rotat\\\\React_AI_Product\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { createTodo, getTodos } from '../api/todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  setTodos\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState('');\n  const addTodo = async todoTitle => {\n    try {\n      await createTodo({\n        title: todoTitle,\n        completed: false\n      });\n      const todos = await getTodos();\n      setTodos(todos);\n    } catch (error) {\n      console.error('addTodoエラー:', error);\n      if (error.response) {\n        console.error('APIエラーレスポンス:', error.response.data);\n      }\n      setError('Error adding todo');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      setError('タイトルを入力してよ！');\n      return;\n    }\n    setError('');\n    await addTodo(title); // ここだけ！\n    setTitle('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\u65B0\\u3057\\u3044Todo\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"Cqy1PGh1raYvpEjsYkKz7zX3APM=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","axios","createTodo","getTodos","jsxDEV","_jsxDEV","TodoForm","setTodos","_s","title","setTitle","error","setError","addTodo","todoTitle","completed","todos","console","response","data","handleSubmit","e","preventDefault","trim","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/rotat/React_AI_Product/react-todo-app/src/components/TodoForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { createTodo, getTodos } from '../api/todos';\n\nconst TodoForm = ({ setTodos }) => {\n    const [title, setTitle] = useState('');\n    const [error, setError] = useState('');\n\n    const addTodo = async (todoTitle) => {\n        try {\n            await createTodo({ title: todoTitle, completed: false });\n            const todos = await getTodos();\n            setTodos(todos);\n        } catch (error) {\n            console.error('addTodoエラー:', error);\n            if (error.response) {\n                console.error('APIエラーレスポンス:', error.response.data);\n            }\n            setError('Error adding todo');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!title.trim()) {\n            setError('タイトルを入力してよ！');\n            return;\n        }\n        setError('');\n        await addTodo(title); // ここだけ！\n        setTitle('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"新しいTodoを追加\"\n            />\n            <button type=\"submit\">追加</button>\n            {error && <p className=\"error\">{error}</p>}\n        </form>\n    );\n};\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,OAAO,GAAG,MAAOC,SAAS,IAAK;IACjC,IAAI;MACA,MAAMZ,UAAU,CAAC;QAAEO,KAAK,EAAEK,SAAS;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MACxD,MAAMC,KAAK,GAAG,MAAMb,QAAQ,CAAC,CAAC;MAC9BI,QAAQ,CAACS,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZM,OAAO,CAACN,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,IAAIA,KAAK,CAACO,QAAQ,EAAE;QAChBD,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACO,QAAQ,CAACC,IAAI,CAAC;MACtD;MACAP,QAAQ,CAAC,mBAAmB,CAAC;IACjC;EACJ,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACb,KAAK,CAACc,IAAI,CAAC,CAAC,EAAE;MACfX,QAAQ,CAAC,aAAa,CAAC;MACvB;IACJ;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZ,MAAMC,OAAO,CAACJ,KAAK,CAAC,CAAC,CAAC;IACtBC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACIL,OAAA;IAAMmB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACzBpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAGP,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChCvB,KAAK,iBAAIN,OAAA;MAAG8B,SAAS,EAAC,OAAO;MAAAV,QAAA,EAAEd;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAAC1B,EAAA,CAzCIF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}