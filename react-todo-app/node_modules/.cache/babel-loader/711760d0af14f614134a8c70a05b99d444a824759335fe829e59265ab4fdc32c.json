{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rotat\\\\React_AI_Product\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  addTodo\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      setError('タイトルを入力してください！');\n      return;\n    }\n    setError('');\n    try {\n      console.log('送信データ:', {\n        title,\n        completed: false\n      });\n      const response = await axios.post('http://localhost:8080/todos', {\n        title,\n        completed: false\n      },\n      // ←ここをオブジェクトに！\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      addTodo(response.data);\n      setTitle('');\n    } catch (err) {\n      console.error('APIエラー:', err);\n      if (err.response) {\n        console.error('APIエラーレスポンス:', err.response.data); // ←ここで中身を確認！\n      }\n      setError('Todoの追加に失敗しました。');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"\\u65B0\\u3057\\u3044Todo\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"Cqy1PGh1raYvpEjsYkKz7zX3APM=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TodoForm","addTodo","_s","title","setTitle","error","setError","handleSubmit","e","preventDefault","trim","console","log","completed","response","post","headers","data","err","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/rotat/React_AI_Product/react-todo-app/src/components/TodoForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TodoForm = ({ addTodo }) => {\n    const [title, setTitle] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!title.trim()) {\n            setError('タイトルを入力してください！');\n            return;\n        }\n        setError('');\n\n        try {\n            console.log('送信データ:', { title, completed: false });\n            const response = await axios.post(\n                'http://localhost:8080/todos',\n                { title, completed: false }, // ←ここをオブジェクトに！\n                { headers: { 'Content-Type': 'application/json' } }\n            );\n            addTodo(response.data);\n            setTitle('');\n        } catch (err) {\n            console.error('APIエラー:', err);\n            if (err.response) {\n                console.error('APIエラーレスポンス:', err.response.data); // ←ここで中身を確認！\n            }\n            setError('Todoの追加に失敗しました。');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"新しいTodoを追加\"\n            />\n            <button type=\"submit\">追加</button>\n            {error && <p className=\"error\">{error}</p>}\n        </form>\n    );\n};\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;MACfJ,QAAQ,CAAC,gBAAgB,CAAC;MAC1B;IACJ;IACAA,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACAK,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE;QAAET,KAAK;QAAEU,SAAS,EAAE;MAAM,CAAC,CAAC;MAClD,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAC7B,6BAA6B,EAC7B;QAAEZ,KAAK;QAAEU,SAAS,EAAE;MAAM,CAAC;MAAE;MAC7B;QAAEG,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAAE,CACtD,CAAC;MACDf,OAAO,CAACa,QAAQ,CAACG,IAAI,CAAC;MACtBb,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACVP,OAAO,CAACN,KAAK,CAAC,SAAS,EAAEa,GAAG,CAAC;MAC7B,IAAIA,GAAG,CAACJ,QAAQ,EAAE;QACdH,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEa,GAAG,CAACJ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACtD;MACAX,QAAQ,CAAC,iBAAiB,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIP,OAAA;IAAMoB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACzBrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF9B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChCxB,KAAK,iBAAIN,OAAA;MAAG+B,SAAS,EAAC,OAAO;MAAAV,QAAA,EAAEf;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAAC3B,EAAA,CA1CIF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}