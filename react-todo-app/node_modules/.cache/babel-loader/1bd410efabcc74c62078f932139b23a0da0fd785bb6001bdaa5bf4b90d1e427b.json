{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rotat\\\\React_AI_Product\\\\react-todo-app\\\\src\\\\components\\\\TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo,\n  onEdit,\n  onDelete,\n  onToggle\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editTitle, setEditTitle] = useState(todo.title);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = () => {\n    onEdit(todo.id, {\n      ...todo,\n      title: editTitle\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.completed,\n      onChange: () => onToggle(todo.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editTitle,\n        onChange: e => setEditTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"\\u4FDD\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: todo.completed ? 'completed' : '',\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(todo.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoItem, \"nwHb9NKwktRbet0nfgVWczRAupI=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","todo","onEdit","onDelete","onToggle","_s","isEditing","setIsEditing","editTitle","setEditTitle","title","handleEdit","handleSave","id","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/rotat/React_AI_Product/react-todo-app/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TodoItem = ({ todo, onEdit, onDelete, onToggle }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editTitle, setEditTitle] = useState(todo.title);\n\n    const handleEdit = () => {\n        setIsEditing(true);\n    };\n\n    const handleSave = () => {\n        onEdit(todo.id, { ...todo, title: editTitle });\n        setIsEditing(false);\n    };\n\n    return (\n        <li>\n            <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => onToggle(todo.id)}\n            />\n            {isEditing ? (\n                <>\n                    <input\n                        type=\"text\"\n                        value={editTitle}\n                        onChange={e => setEditTitle(e.target.value)}\n                    />\n                    <button onClick={handleSave}>保存</button>\n                </>\n            ) : (\n                <>\n                    <span className={todo.completed ? 'completed' : ''}>{todo.title}</span>\n                    <button onClick={handleEdit}>Edit</button>\n                </>\n            )}\n            <button onClick={() => onDelete(todo.id)}>Delete</button>\n        </li>\n    );\n};\n\nexport default TodoItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACM,IAAI,CAACS,KAAK,CAAC;EAEtD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBJ,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACrBV,MAAM,CAACD,IAAI,CAACY,EAAE,EAAE;MAAE,GAAGZ,IAAI;MAAES,KAAK,EAAEF;IAAU,CAAC,CAAC;IAC9CD,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIV,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MACIkB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEf,IAAI,CAACgB,SAAU;MACxBC,QAAQ,EAAEA,CAAA,KAAMd,QAAQ,CAACH,IAAI,CAACY,EAAE;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACDhB,SAAS,gBACNT,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACIjB,OAAA;QACIkB,IAAI,EAAC,MAAM;QACXQ,KAAK,EAAEf,SAAU;QACjBU,QAAQ,EAAEM,CAAC,IAAIf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACF,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFzB,OAAA;QAAQ6B,OAAO,EAAEd,UAAW;QAAAE,QAAA,EAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC1C,CAAC,gBAEHzB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACIjB,OAAA;QAAM8B,SAAS,EAAE1B,IAAI,CAACgB,SAAS,GAAG,WAAW,GAAG,EAAG;QAAAH,QAAA,EAAEb,IAAI,CAACS;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvEzB,OAAA;QAAQ6B,OAAO,EAAEf,UAAW;QAAAG,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC5C,CACL,eACDzB,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMvB,QAAQ,CAACF,IAAI,CAACY,EAAE,CAAE;MAAAC,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEb,CAAC;AAACjB,EAAA,CAtCIL,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}